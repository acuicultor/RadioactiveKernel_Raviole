Project name: RadioactiveKernel_Raviole-v1.0.0
  * update build version (acuicultor)
  * gs201: Remove clk_ignore_unused and no_console_suspend  * Both are for debugging (celtare21) [4d86af362c2a]
  * mm: memcg: fix stale protection of reclaim target memcg (Yosry Ahmed) [111720425b4b]
  * mm: multi-gen LRU: retry folios written back while isolated (Yu Zhao) [83b790dc16c8]
  * mm: multi-gen LRU: move lru_gen_add_mm() out of IRQ-off region (Sebastian Andrzej Siewior) [8a59510f6c32]
  * ANDROID: GKI: MGLRU ABI Fixup (Kalesh Singh) [4091b0320ab3]
  * ANDROID: GKI: Build multi-gen LRU (Kalesh Singh) [271e0c811459]
  * ANDROID: Make MGLRU aware of speculative faults (Kalesh Singh) [4adddd5404e2]
  * BACKPORT: mm: multi-gen LRU: design doc (Yu Zhao) [7153a4a54584]
  * UPSTREAM: mm: multi-gen LRU: admin guide (Yu Zhao) [dfbc9adf6a07]
  * BACKPORT: mm: multi-gen LRU: debugfs interface (Yu Zhao) [cd2e4eeb11f0]
  * UPSTREAM: mm: multi-gen LRU: thrashing prevention (Yu Zhao) [64db71985444]
  * BACKPORT: mm: multi-gen LRU: kill switch (Yu Zhao) [287ef0ea5776]
  * BACKPORT: mm: multi-gen LRU: optimize multiple memcgs (Yu Zhao) [5f0358aa4650]
  * BACKPORT: mm: multi-gen LRU: support page table walks (Yu Zhao) [23ae416b2170]
  * BACKPORT: mm: multi-gen LRU: exploit locality in rmap (Yu Zhao) [b59c893ad0c2]
  * BACKPORT: mm: multi-gen LRU: minimal implementation (Yu Zhao) [8fa60aa9c44d]
  * BACKPORT: mm: multi-gen LRU: groundwork (Yu Zhao) [bb6c631a84a9]
  * BACKPORT: mm/vmscan.c: refactor shrink_node() (Yu Zhao) [5a63575dea99]
  * BACKPORT: mm: x86: add CONFIG_ARCH_HAS_NONLEAF_PMD_YOUNG (Yu Zhao) [0b0bf125daf3]
  * BACKPORT: mm: x86, arm64: add arch_has_hw_pte_young() (Yu Zhao) [6229322a91a9]
  * Revert "FROMLIST: mm: x86, arm64: add arch_has_hw_pte_young()" (Kalesh Singh) [68d4a6acaf3c]
  * Revert "FROMLIST: mm: x86: add CONFIG_ARCH_HAS_NONLEAF_PMD_YOUNG" (Kalesh Singh) [735584b82238]
  * Revert "FROMLIST: mm/vmscan.c: refactor shrink_node()" (Kalesh Singh) [388ba4837091]
  * Revert "FROMLIST: mm: multi-gen LRU: groundwork" (Kalesh Singh) [5e938e53dd4b]
  * Revert "FROMLIST: mm: multi-gen LRU: minimal implementation" (Kalesh Singh) [626fb0ed4105]
  * Revert "FROMLIST: mm: multi-gen LRU: exploit locality in rmap" (Kalesh Singh) [fbf6804e2697]
  * Revert "FROMLIST: mm: multi-gen LRU: support page table walks" (Kalesh Singh) [153f1605d69d]
  * Revert "FROMLIST: mm: multi-gen LRU: optimize multiple memcgs" (Kalesh Singh) [48fe04a6d643]
  * Revert "FROMLIST: mm: multi-gen LRU: kill switch" (Kalesh Singh) [915ed8e040a4]
  * Revert "FROMLIST: mm: multi-gen LRU: thrashing prevention" (Kalesh Singh) [66a0bef59b85]
  * Revert "FROMLIST: mm: multi-gen LRU: debugfs interface" (Kalesh Singh) [f4528b2ebd18]
  * Revert "FROMLIST: mm: multi-gen LRU: admin guide" (Kalesh Singh) [2ce08a973057]
  * Revert "FROMLIST: mm: multi-gen LRU: design doc" (Kalesh Singh) [ff42a3dfe668]
  * Revert "ANDROID: GKI: build multi-gen LRU" (Kalesh Singh) [03c5d53722b8]
  * Revert "ANDROID: Make MGLRU aware of speculative faults" (Kalesh Singh) [e382db1e5954]
  * defconfig regenerate (Sultan Alsawaf) [4c629321cf52]
  * kernel: Don't allow IRQ affinity masks to have more than one CPU (Sultan Alsawaf) [4dc0d537c31f]
  * gs201: change control_temp_step to reduce overshoot throttling (freak07) [ac299b14ce45]
  * arm64: dts: Update memlat table for CPU4/5 on gs201 (freak07) [6587aa5239bb]
  * goodix: Affine Goodix IRQ to big CPUs (Panchajanya1999) [edf450bd7575]
  * rcu: Run nocb and nocb GP khreads on little clusters (Sultan Alsawaf) [f0fa50acfd79]
  * workqueue: Affine unbound workqueues to little CPUs by default (Sultan Alsawaf) [2bae50d3d8c6]
  * kernel: Affine hwcomposer to big CPUs (Sultan Alsawaf) [65148553781c]
  * exec: jump if execution fails (Panchajanya1999) [386d91f29bf9]
  * exec: Implement API to interact with zygote{32, 64} processes (Sultan Alsawaf) [af1fefb180a6]
  * kernel: Only set one CPU in the default IRQ affinity mask (Sultan Alsawaf) [f3ee592e77df]
  * kernel: Don't allow IRQ affinity masks to have more than one CPU (Sultan Alsawaf) [f79a3097909b]
  * kernel: Extend the perf-critical API to little CPUs (Sultan Alsawaf) [ff04f4a404ed]
  * kernel: Add tri-cluster API to affine IRQs and kthreads to fast CPUs (Sultan Alsawaf) [cabec0b87ec8]
  * cpumask: Add cpumasks for big, LITTLE, and prime CPU clusters (Sultan Alsawaf) [097035d8d6ba]
  * qos: Don't allow userspace to impose restrictions on CPU idle levels (Sultan Alsawaf) [6bfd6c099a45]
  * treewide: use power efficient workingqueues (freak07) [bd1028223650]
  * mm: vmstat: use power efficient workingqueues (freak07) [d6ea6539980c]
  * psci/exynos: Silence logging (celtare21) [44728fd4d2bb]
  * eh: increase sw buffer size (freak07) [e9166bdbe230]
  * eh: fix sysfs interface (freak07) [b685926dd882]
  * printk: Don't allow userspace to write to /dev/kmsg (idkwhoiam322) [481d29ee7a72]
  * buld.config: don't build eng and userdebug dtbo (acuicultor) [ee63ae9a0116]
  * arm64: dts: Don't build userdebug or eng (celtare21) [e17bcd1e1315]
  * Makefile: use ccache (acuicultor) [ac9a27b86f0b]
  * defconfig regenerate (acuicultor) [29f3b25ceb56]
  * net-tcp_bbr: v2: add support for PLB in TCP and BBRv2 (Mubashir Adnan Qureshi) [50183441274d]
  * net-tcp_bbr: v2: Fix missing ECT markings on retransmits for BBRv2 (Adithya Abraham Philip) [0b6a0e4eb00c]
  * net-tcp_bbr: v2: don't assume prior_cwnd was set entering CA_Loss (Neal Cardwell) [a1fcdb846f88]
  * net-tcp_bbr: v2: remove cycle_rand parameter that is unused in BBRv2 (Neal Cardwell) [88f6c68c3645]
  * net-tcp_bbr: v2: remove field bw_rtts that is unused in BBRv2 (Neal Cardwell) [ad1911c8063b]
  * net-gbuild: add Gconfig.bbr2 to gbuild kernel with CONFIG_TCP_CONG_BBR2=y (Neal Cardwell) [7709345965bf]
  * net-tcp_bbr: v2: remove unnecessary rs.delivered_ce logic upon loss (Neal Cardwell) [0f70c357b793]
  * net-tcp: add fast_ack_mode=1: skip rwin check in tcp_fast_ack_mode__tcp_ack_snd_check() (Neal Cardwell) [1a3313f28a11]
  * net-tcp: re-generalize TSO sizing in TCP CC module API (Neal Cardwell) [4652095c1caa]
  * net-tcp: add new ca opts flag TCP_CONG_WANTS_CE_EVENTS (Yousuk Seung) [71ede2808834]
  * net-tcp_bbr: v2: set tx.in_flight for skbs in repair write queue (Neal Cardwell) [9f65754a2dd9]
  * net-tcp_bbr: v2: adjust skb tx.in_flight upon split in tcp_fragment() (Neal Cardwell) [6b143ccf898b]
  * net-tcp_bbr: v2: adjust skb tx.in_flight upon merge in tcp_shifted_skb() (Neal Cardwell) [d06a0a416680]
  * net-tcp_bbr: v2: factor out tx.in_flight setting into tcp_set_tx_in_flight() (Neal Cardwell) [4d2db3ecf0b5]
  * net-tcp_bbr: v2: introduce ca_ops->skb_marked_lost() CC module callback API (Neal Cardwell) [8f18194d04ae]
  * net-tcp_bbr: v2: export FLAG_ECE in rate_sample.is_ece (Neal Cardwell) [813cffe3e4ae]
  * net-tcp_bbr: v2: count packets lost over TCP rate sampling interval (Neal Cardwell) [9d78b03770b1]
  * net-tcp_bbr: v2: snapshot packets in flight at transmit time and pass in rate_sample (Neal Cardwell) [faef0c0506dd]
  * net-tcp_bbr: v2: shrink delivered_mstamp, first_tx_mstamp to u32 to free up 8 bytes (Neal Cardwell) [23bce399df0a]
  * net-tcp_rate: account for CE marks in rate sample (Yuchung Cheng) [2f1a5c3a9e07]
  * net-tcp_rate: consolidate inflight tracking approaches in TCP (Yuchung Cheng) [593fd81fe3bc]
  * net-tcp_bbr: broaden app-limited rate sample detection (Neal Cardwell) [9759e67cf175]
  * net-tcp_bbr: v2: BBRv2 ("bbr2") congestion control for Linux TCP (Neal Cardwell) [98e747545931]
  * tcp: do not call tcp_cleanup_rbuf() if we have a backlog (Eric Dumazet) [f37f7227de67]
  * tcp: defer skb freeing after socket lock is released (Eric Dumazet) [0b494fb99500]
  * net-tcp: Introduce tcp_recvmsg_locked(). (Arjun Roy) [56c7c54e28ab]
  * tcp: avoid indirect calls to sock_rfree (Eric Dumazet) [7675da7032db]
  * tcp: add RETPOLINE mitigation to sk_backlog_rcv (Eric Dumazet) [c4f8742a47c8]
  * tcp: small optimization in tcp recvmsg() (Eric Dumazet) [18b32c7d5811]
  * tcp: minor optimization in tcp_add_backlog() (Eric Dumazet) [3d631b373959]
  * include: blkdev.h: Do not collect I/O statistics (HolyAngel) [88c5e166c3a6]
  * CHROMIUM: selinux: Do not log permissive denials (Daniel Kurtz) [0c82b5b00aef]
  * arm64: debug: disable self-hosted debug by default (kdrag0n) [abb2350796d6]
  * configs: Set the correct value for NR_CPUS (acuicultor) [03e3d61cdc31]
  * PM/Sleep: Start killing wakelocks after two minutes of idle (120s) (Tyler Nijmeh) [f5178dfd4d41]
  * drivers: hwtracing: coresight: use O2 at compile time (acuicultor) [f4dda1f325c5]
  * defconfig regenerate (acuicultor) [59649f3ae564]
  * ssg: import from Samsung SM-S908B_12_Opensource (freak07) [a462d1ebe1c0]
  * bfq: Remove bfq_requeue_request_body() (Jan Kara) [2bd695e247fa]
  * bfq: Remove superfluous conversion from RQ_BIC() (Jan Kara) [fe361a77d772]
  * bfq: Allow current waker to defend against a tentative one (Jan Kara) [462c68dbac79]
  * bfq: Relax waker detection for shared queues (Jan Kara) [af518dd699aa]
  * block, bfq: make bfq_has_work() more accurate (Yu Kuai) [2474d460512b]
  * block, bfq: protect 'bfqd->queued' by 'bfqd->lock' (Yu Kuai) [353464a55505]
  * bfq: Fix warning in bfqq_request_over_limit() (Jan Kara) [dd4501f297c8]
  * bfq: Make sure bfqg for which we are queueing requests is online (Jan Kara) [f9c4f88726d6]
  * bfq: Get rid of __bio_blkcg() usage (Jan Kara) [b051eca20228]
  * bfq: Track whether bfq_group is still online (Jan Kara) [1d61c5fee512]
  * bfq: Remove pointless bfq_init_rq() calls (Jan Kara) [0de1ba4e8aa6]
  * bfq: Drop pointless unlock-lock pair (Jan Kara) [748cb6d23fc4]
  * bfq: Update cgroup information before merging bio (Jan Kara) [060cdd195e75]
  * bfq: Split shared queues on move between cgroups (Jan Kara) [98d3951f2879]
  * bfq: Avoid merging queues with different parents (Jan Kara) [87724cae8a4e]
  * bfq: Avoid false marking of bic as stably merged (Jan Kara) [d94f0f21bb24]
  * block/bfq_wf2q: correct weight to ioprio (Yahu Gao) [fbbc92cce7a6]
  * block/bfq-iosched: Fix spelling mistake "tenative" -> "tentative" (Colin Ian King) [059450094602]
  * block, bfq: cleanup bfq_bfqq_to_bfqg() (Yu Kuai) [444d41b867c7]
  * block, bfq: reset last_bfqq_created on group change (Paolo Valente) [f0df9744fa7b]
  * bfq: use bfq_bic_lookup in bfq_limit_depth (Christoph Hellwig) [0797f4b5d86e]
  * bfq: simplify bfq_bic_lookup (Christoph Hellwig) [7bff8c4f5136]
  * fork: move copy_io to block/blk-ioc.c (Christoph Hellwig) [f728b1b613e1]
  * bfq: Do not let waker requests skip proper accounting (Jan Kara) [effd79b33e6b]
  * bfq: Log waker detections (Jan Kara) [368642f819ed]
  * bfq: Provide helper to generate bfqq name (Jan Kara) [b881cdd65dbe]
  * bfq: Limit waker detection in time (Jan Kara) [ad88d503791b]
  * bfq: Limit number of requests consumed by each cgroup (Jan Kara) [6de83884d680]
  * bfq: Store full bitmap depth in bfq_data (Jan Kara) [d36f86102f7e]
  * bfq: Track number of allocated requests in bfq_entity (Jan Kara) [d6e4f058f04c]
  * bfq/mq-deadline: remove redundant check for passthrough request (Lin Feng) [1e561bedc40a]
  * blk: Fix lock inversion between ioc lock and bfqd lock (Jan Kara) [aeda97560207]
  * bfq: Remove merged request already in bfq_requests_merged() (Jan Kara) [f641dfc93bf7]
  * block, bfq: reset waker pointer with shared queues (Paolo Valente) [2549ac01eba4]
  * block, bfq: check waker only for queues with no in-flight I/O (Paolo Valente) [d247e427260f]
  * block, bfq: avoid delayed merge of async queues (Paolo Valente) [6d7e53202aa1]
  * block, bfq: boost throughput by extending queue-merging times (Pietro Pedroni) [ba92bf65ce7d]
  * block, bfq: consider also creation time in delayed stable merge (Paolo Valente) [c84cb4c3607c]
  * block, bfq: fix delayed stable merge check (Luca Mariotti) [090db807ed1c]
  * block, bfq: let also stably merged queues enjoy weight raising (Paolo Valente) [9548b9ed6bfc]
  * block, bfq: avoid circular stable merges (Paolo Valente) [16ec4a457f8e]
  * block, bfq: merge bursts of newly-created queues (Paolo Valente) [f373fbe5ba02]
  * block, bfq: keep shared queues out of the waker mechanism (Paolo Valente) [988712cf62ac]
  * block, bfq: fix weight-raising resume with !low_latency (Paolo Valente) [86e1e1e8c8cd]
  * block, bfq: make shared queues inherit wakers (Paolo Valente) [803fdc50f8a7]
  * block, bfq: put reqs of waker and woken in dispatch list (Paolo Valente) [530dd28c4b36]
  * block, bfq: always inject I/O of queues blocked by wakers (Paolo Valente) [6b348bbe9c91]
  * block/bfq: update comments and default value in docs for fifo_expire (Joseph Qi) [4cd31c174e52]
  * bfq-iosched: Revert "bfq: Fix computation of shallow depth" (Lin Feng) [05559167e82d]
  * bfq: Use only idle IO periods for think time calculations (Jan Kara) [4a8345fe5419]
  * bfq: Use 'ttime' local variable (Jan Kara) [0f467f07f607]
  * iov_iter: optimise bvec iov_iter_advance() (Pavel Begunkov) [e7655b410083]
  * target/file: allocate the bvec array as part of struct target_core_file_cmd (Christoph Hellwig) [4bb86b2142a7]
  * bvec/iter: disallow zero-length segment bvecs (Pavel Begunkov) [c4af31c56d23]
  * splice: don't generate zero-len segement bvecs (Pavel Begunkov) [3301dcc06ef7]
  * bfq: bfq_check_waker() should be static (Jens Axboe) [0654cb65437f]
  * block, bfq: make waker-queue detection more robust (Paolo Valente) [0ba6758a5d2a]
  * block, bfq: save also injection state on queue merging (Paolo Valente) [ebad7504ee5b]
  * block, bfq: save also weight-raised service on queue merging (Paolo Valente) [b17b0a803089]
  * block, bfq: fix switch back from soft-rt weitgh-raising (Paolo Valente) [5345b985acca]
  * block, bfq: re-evaluate convenience of I/O plugging on rq arrivals (Paolo Valente) [62eddd052130]
  * block, bfq: replace mechanism for evaluating I/O intensity (Paolo Valente) [874188bdfe8d]
  * bio: don't copy bvec for direct IO (Pavel Begunkov) [2d808bff5d04]
  * block/psi: remove PSI annotations from direct IO (Pavel Begunkov) [51559876327a]
  * bio: add a helper calculating nr segments to alloc (Pavel Begunkov) [973e5fb72a50]
  * bfq: don't duplicate code for different paths (huhai) [50959ebc503d]
  * block, bfq: do not expire a queue when it is the only busy one (Paolo Valente) [28b0a81673e3]
  * block, bfq: avoid spurious switches to soft_rt of interactive queues (Paolo Valente) [3c75b09d1321]
  * block, bfq: do not raise non-default weights (Paolo Valente) [b4fc95b4ed21]
  * block, bfq: increase time window for waker detection (Paolo Valente) [83f6cbc8a1d8]
  * block, bfq: use half slice_idle as a threshold to check short ttime (Paolo Valente) [ff95196c9d17]
  * bfq: Fix computation of shallow depth (Jan Kara) [98899f2287d8]
  * PM / devfreq: Make the monitor workqueue high priority (Sultan Alsawaf) [cc67df783c18]
  * lib/string: optimized memset (Matteo Croce) [a065ff9df5f8]
  * lib/string: optimized memmove (Matteo Croce) [150e4ed36423]
  * mm: Disable watermark boosting by default (Sultan Alsawaf) [2bab07daa007]
  * init: CC_OPTIMIZE_FOR_PERFORMANCE_O3 don't depend on ARC (celtare21) [1583628ba5f5]
  * binder: Stub out debug prints by default (Sultan Alsawaf) [156c07b38700]
  * drivers: nfc: Lower wakelock timeout (celtare21) [7597cfe4c644]
  * mm: oom_kill: Reduce some verbose logging (Diab Neiroukh) [1effb53a121c]
  * sched: core: silence no longer affine to cpu logspam (Yaroslav Furman) [6c3644075890]
  * cpu: Silence log spam when a CPU is brought up (Sultan Alsawaf) [6631d5c960a3]
  * staging: binder - Set binder_debug_mask=0 to suppress logging (John Dias) [5808eb523830]
  * pwm: treat double free as a debug message (Park Ju Hyung) [fe902086166f]
  * f2fs: reduce timeout for uncongestion (Park Ju Hyung) [a7d82faf44ec]
  * f2fs: set ioprio of GC kthread to idle (Park Ju Hyung) [082c9239df0d]
  * dtc: quiet (tbalden) [d1ac0612cc24]
  * defconfig: adjust cmdline for faster boot (engstk) [b3df324f2e33]
  * fs: sync: Avoid calling fdget without fdput When adding fsync support, we check for fsync_enabled() in several cases but it appears that we should fdput() after fdget() but the current code just check for fsync_enabled and directly return in some cases after calling fdget(). (Wang Han) [88305176a931]
  * fs: fsync on/off support (franciscofranco) [5c74d3cefdd1]
  * workqueue: change permissions to allow root control of wq_power_efficient toggle (matthewdalex) [12a1b21f2191]
  * makefile: disable some clang spam (engstk) [568d43ea24ab]
  * makefile: disable some clang spam (engstk) [d9c821127488]
  * makefile: add initial build changes (engstk) [152da59b05ac]
  * [TESTING] gki: disable debug core Trying to speed up the system (Jaegeuk Kim) [034be0e48f6f]
  * scripts: fix the crappy URLs in newest Google Clang versions and kernel version name and compile date/time (acuicultor) [3067ccf2e67a]
  * Revert "kbuild: use CONFIG_CC_VERSION_TEXT to construct LINUX_COMPILER macro" (acuicultor) [36daa7dc5207]
  * fs: default to noatime (arter97) [8a80fe254747]
  * sock: inline SELinux's sk_security to struct sock (Park Ju Hyung) [0b927f7db763]
  * trace: Add a CONFIG_DISABLE_TRACE_PRINTK option. (Park Ju Hyung) [96f84adaf672]
  * net/sched: Shut up (celtare21) [5aef3b935f4d]
  * boeffla_wl_blocker: don't block any wakelock by default (acuicultor) [1a986cc45f9b]
  * boeffla_wl_blocker: update to wakelock blocker driver v1.1.0 (andip71) [3d00de5628ed]
  * boeffla_wl_blocker: update to wakelock blocker driver v1.0.1 (andip71) [85c871e5e9d6]
  * boeffla_wl_blocker: add generic wakelock blocker driver v1.0.0 (andip71) [afc96e8e169d]
  * defconfig: initial adjustments (acuicultor) [1c93b2a3c076]
  * update .gitignore (acuicultor) [c740eda344f0]
